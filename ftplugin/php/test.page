


    /*  -------------"_--------------- */
/* "`wrapped^"                     */



"WRAPPED_TEXT
WRAPPED_TEXT_line2"

"WRAPPED_TEXT
WRAPPED_TEXT_line2" b

a "WRAPPED_TEXT
WRAPPED_TEXT_line2" b

a "WRAPPED_TEXT
WRAPPED_TEXT_line2"


    /*  -------------'_--------------- */
/* '`wrapped^'                     */



'WRAPPED_TEXT
WRAPPED_TEXT_line2'

'WRAPPED_TEXT
WRAPPED_TEXT_line2' b

a 'WRAPPED_TEXT
WRAPPED_TEXT_line2' b

a 'WRAPPED_TEXT
WRAPPED_TEXT_line2'


    /*  -------------(_--------------- */
/* (`wrapped^)                     */



(WRAPPED_TEXT
WRAPPED_TEXT_line2)

(WRAPPED_TEXT
WRAPPED_TEXT_line2) b

a (WRAPPED_TEXT
WRAPPED_TEXT_line2) b

a (WRAPPED_TEXT
WRAPPED_TEXT_line2)


    /*  -------------<_--------------- */
/* <`wrapped^>                     */



<WRAPPED_TEXT
WRAPPED_TEXT_line2>

<WRAPPED_TEXT
WRAPPED_TEXT_line2> b

a <WRAPPED_TEXT
WRAPPED_TEXT_line2> b

a <WRAPPED_TEXT
WRAPPED_TEXT_line2>


    /*  -------------[_--------------- */
/* [`wrapped^]                     */



[WRAPPED_TEXT
WRAPPED_TEXT_line2]

[WRAPPED_TEXT
WRAPPED_TEXT_line2] b

a [WRAPPED_TEXT
WRAPPED_TEXT_line2] b

a [WRAPPED_TEXT
WRAPPED_TEXT_line2]


    /*  -------------`_--------------- */
/* \``wrapped^\`                   */



`WRAPPED_TEXT
WRAPPED_TEXT_line2`

`WRAPPED_TEXT
WRAPPED_TEXT_line2` b

a `WRAPPED_TEXT
WRAPPED_TEXT_line2` b

a `WRAPPED_TEXT
WRAPPED_TEXT_line2`


    /*  -------------Author--------------- */
/* `$author^                           */



drdr.xp

drdr.xp b

a drdr.xp b

a drdr.xp


    /*  -------------case--------------- */
/* case `constant^`$SPcmd^:          */
/*     `job^                         */
/*     break;                        */



case constant :
    /* void */;
    break;

case constant_TYPED :
    job_TYPED
    break; b

a case constant :
    /* void */;
    break; b

a case constant :
    /* void */;
    break;


    /*  -------------class---------------          */
/* class `className^`$BRfun^{                  */
/*     function __construct( `args^ )`$BRfun^{ */
/*         `cursor^                            */
/*     }                                       */
/* }                                           */



class className {
    function __construct( args ) {
        
    }
}

class className_TYPED {
    function __construct( args_TYPED ) {
        
    }
} b

a class className {
    function __construct( args ) {
        
    }
} b

a class className {
    function __construct( args ) {
        
    }
}


    /*  -------------comment--------------- */
/* `$CL^ `what^ `$CR^                   */



/* what */

/* what_TYPED */ b

a /* what */ b

a /* what */


    /*  -------------comment_--------------- */
/* `$CL^ `wrapped^ `$CR^                 */



/* WRAPPED_TEXT
WRAPPED_TEXT_line2 */

/* WRAPPED_TEXT
WRAPPED_TEXT_line2 */ b

a /* WRAPPED_TEXT
WRAPPED_TEXT_line2 */ b

a /* WRAPPED_TEXT
WRAPPED_TEXT_line2 */


    /*  -------------commentBlock--------------- */
/* `$CL^                                     */
/*  `$CM^ `cursor^                           */
/*  `$CR^                                    */



/*
 * 
 */

/*
 * 
 */ b

a /*
 * 
 */ b

a /*
 * 
 */


    /*  -------------commentBlock_--------------- */
/* `$CL^                                      */
/*  `$CM^ `wrapped^                           */
/*  `$CR^                                     */



/*
 * WRAPPED_TEXT
 WRAPPED_TEXT_line2
 */

/*
 * WRAPPED_TEXT
 WRAPPED_TEXT_line2
 */ b

a /*
 * WRAPPED_TEXT
 WRAPPED_TEXT_line2
 */ b

a /*
 * WRAPPED_TEXT
 WRAPPED_TEXT_line2
 */


    /*  -------------commentDoc--------------- */
/* `$CL^`$CM^                              */
/*  `$CM^ `cursor^                         */
/*  `$CR^                                  */



/**
 * 
 */

/**
 * 
 */ b

a /**
 * 
 */ b

a /**
 * 
 */


    /*  -------------commentDoc_--------------- */
/* `$CL^`$CM^                               */
/*  `$CM^ `wrapped^                         */
/*  `$CR^                                   */



/**
 * WRAPPED_TEXT
 WRAPPED_TEXT_line2
 */

/**
 * WRAPPED_TEXT
 WRAPPED_TEXT_line2
 */ b

a /**
 * WRAPPED_TEXT
 WRAPPED_TEXT_line2
 */ b

a /**
 * WRAPPED_TEXT
 WRAPPED_TEXT_line2
 */


    /*  -------------commentLine--------------- */
/* `$CL^ `what^ `$CR^                       */



/* what */

/* what_TYPED */ b

a /* what */ b

a /* what */


    /*  -------------commentLine_--------------- */
/* `$CL^ `wrapped^ `$CR^                     */



/* WRAPPED_TEXT
WRAPPED_TEXT_line2 */

/* WRAPPED_TEXT
WRAPPED_TEXT_line2 */ b

a /* WRAPPED_TEXT
WRAPPED_TEXT_line2 */ b

a /* WRAPPED_TEXT
WRAPPED_TEXT_line2 */


    /*  -------------default--------------- */
/* default:                             */
/*     `cursor^                         */



default:
    

default:
     b

a default:
     b

a default:
    


    /*  -------------do--------------- */
/* do`$BRloop^{                    */
/*     `cursor^                    */
/* }`$BRloop^while (`condition^);  */



do {
    
} while (condition);

do {
    
} while (condition_TYPED); b

a do {
    
} while (condition); b

a do {
    
} while (condition);


    /*  -------------elif--------------- */
/* else `Include:_if^                */



else if ( condition ) {
    /* void */;
}

else if ( condition_TYPED ) {
    job_TYPED
} b

a else if ( condition ) {
    /* void */;
} b

a else if ( condition ) {
    /* void */;
}


    /*  -------------else--------------- */
/* else`$BRif^{                      */
/*     `cursor^                      */
/* }                                 */



else {
    
}

else {
    
} b

a else {
    
} b

a else {
    
}


    /*  -------------else_--------------- */
/* else`$BRif^{                       */
/*     `wrapped^                      */
/* }                                  */



else {
    WRAPPED_TEXT
    WRAPPED_TEXT_line2
}

else {
    WRAPPED_TEXT
    WRAPPED_TEXT_line2
} b

a else {
    WRAPPED_TEXT
    WRAPPED_TEXT_line2
} b

a else {
    WRAPPED_TEXT
    WRAPPED_TEXT_line2
}


    /*  -------------Email--------------- */
/* `$email^                           */



drdr.xp@gmail.com

drdr.xp@gmail.com b

a drdr.xp@gmail.com b

a drdr.xp@gmail.com


    /*  -------------File--------------- */
/* `file()^                          */



test.page

test.page b

a test.page b

a test.page


    /*  -------------for---------------                                                          */
/* for ( `$FOR_SCOPE^`$VAR_PRE^`i^ = `0^; `$VAR_PRE^`i^ < `len^; ++`$VAR_PRE^`i^ )`$BRloop^{ */
/*     `cursor^                                                                              */
/* }                                                                                         */



for ( $i = 0; $i < len; ++$i ) {
    
}

for ( $i_TYPED = 0_TYPED; $i_TYPED < len_TYPED; ++$i_TYPED ) {
    
} b

a for ( $i = 0; $i < len; ++$i ) {
    
} b

a for ( $i = 0; $i < len; ++$i ) {
    
}


    /*  -------------foreach---------------      */
/* foreach ($`var^ as `container^)`$BRloop^{ */
/*     `cursor^                              */
/* }                                         */



foreach ($var as container) {
    
}

foreach ($var_TYPED as container_TYPED) {
    
} b

a foreach ($var as container) {
    
} b

a foreach ($var as container) {
    
}


    /*  -------------forever--------------- */
/* for (;;) `body^                      */



for (;;) /* void */

for (;;) /* void */ b

a for (;;) /* void */ b

a for (;;) /* void */


    /*  -------------fornn---------------                                                                    */
/* for ( `$FOR_SCOPE^`$VAR_PRE^`ptr^ = `init^; `$NULL^ != `$VAR_PRE^`ptr^; `$VAR_PRE^`ptrOp^ )`$BRloop^{ */
/*     `cursor^                                                                                          */
/* }                                                                                                     */



for ( $ptr = init; null != $ptr; $ptr ) {
    
}

for ( $ptr_TYPED = init_TYPED; null != $ptr_TYPED; $ptrOp_TYPED ) {
    
} b

a for ( $ptr = init; null != $ptr; $ptr ) {
    
} b

a for ( $ptr = init; null != $ptr; $ptr ) {
    
}


    /*  -------------forr---------------                                                            */
/* for ( `$FOR_SCOPE^`$VAR_PRE^`i^ = `0^; `$VAR_PRE^`i^ >`=^ `end^; --`$VAR_PRE^`i^ )`$BRloop^{ */
/*     `cursor^                                                                                 */
/* }                                                                                            */



for ( $i = 0; $i >= end; --$i ) {
    
}

for ( $i_TYPED = 0_TYPED; $i_TYPED >_TYPED end_TYPED; --$i_TYPED ) {
    
} b

a for ( $i = 0; $i >= end; --$i ) {
    
} b

a for ( $i = 0; $i >= end; --$i ) {
    
}


    /*  -------------fun---------------          */
/* function `funName^(` `params` ^)`$BRfun^{ */
/*     `cursor^                              */
/* }                                         */



function funName() {
    
}

function funName_TYPED( params_TYPED ) {
    
} b

a function funName() {
    
} b

a function funName() {
    
}


    /*  -------------html--------------- */
/* ?>`html^<?`$PHP_TAG^              */



?>html<?

?>html_TYPED<? b

    a ?>html<? b

    a ?>html<?


    /*  -------------if---------------                     */
/* `Include:_if^` `else...{{^`$BRel^`Include:else^`}}^ */



    if ( condition ) {
        /* void */;
    }
    else {
        
    }

if ( condition_TYPED ) {
    job_TYPED
} else_TYPED b

a if ( condition ) {
    /* void */;
}
else {
    
} b

    a if ( condition ) {
        /* void */;
    }
    else {
        
    }


    /*  -------------if0---------------                    */
/* `Include:_if^` `else...{{^`$BRel^`Include:else^`}}^ */



if ( 0 == var ) {
    /* void */;
}
else {
    
}

if ( 0 == var_TYPED ) {
    job_TYPED
} else_TYPED b

a if ( 0 == var ) {
    /* void */;
}
else {
    
} b

    a if ( 0 == var ) {
        /* void */;
    }
    else {
        
    }


    /*  -------------if_---------------                */
/* if`$SPcmd^(`$SParg^`condition^`$SParg^)`$BRif^{ */
/*     `wrapped^                                   */
/* }                                               */



if ( condition ) {
    WRAPPED_TEXT
    WRAPPED_TEXT_line2
}

if ( condition_TYPED ) {
    WRAPPED_TEXT
    WRAPPED_TEXT_line2
}b

a if ( condition ) {
    WRAPPED_TEXT
    WRAPPED_TEXT_line2
}b

a if ( condition ) {
    WRAPPED_TEXT
    WRAPPED_TEXT_line2
}


    /*  -------------ifee---------------                                    */
/* `Include:_if^` `else_if...{{^`$BRel^`Include:elif^` `else_if...^`}}^ */



if ( condition ) {
    /* void */;
}
else if ( condition ) {
    /* void */;
}
else if ( condition ) {
    /* void */;
}
else if ( condition ) {
    /* void */;
}

if ( condition_TYPED ) {
    job_TYPED
} else_if_TYPED b

a if ( condition ) {
    /* void */;
}
else if ( condition ) {
    /* void */;
}
else if ( condition ) {
    /* void */;
}
else if ( condition ) {
    /* void */;
} b

    a if ( condition ) {
        /* void */;
    }
    else if ( condition ) {
        /* void */;
    }
    else if ( condition ) {
        /* void */;
    }
    else if ( condition ) {
        /* void */;
    }


    /*  -------------ifn---------------                    */
/* `Include:_if^` `else...{{^`$BRel^`Include:else^`}}^ */



if ( null == var ) {
    /* void */;
}
else {
    
}

if ( null == var_TYPED ) {
    job_TYPED
} else_TYPED b

a if ( null == var ) {
    /* void */;
}
else {
    
} b

    a if ( null == var ) {
        /* void */;
    }
    else {
        
    }


    /*  -------------ifn0---------------                   */
/* `Include:_if^` `else...{{^`$BRel^`Include:else^`}}^ */



if ( 0 != var ) {
    /* void */;
}
else {
    
}

if ( 0 != var_TYPED ) {
    job_TYPED
} else_TYPED b

a if ( 0 != var ) {
    /* void */;
}
else {
    
} b

    a if ( 0 != var ) {
        /* void */;
    }
    else {
        
    }


    /*  -------------ifnn---------------                   */
/* `Include:_if^` `else...{{^`$BRel^`Include:else^`}}^ */



if ( null != var ) {
    /* void */;
}
else {
    
}

if ( null != var_TYPED ) {
    job_TYPED
} else_TYPED b

a if ( null != var ) {
    /* void */;
}
else {
    
} b

    a if ( null != var ) {
        /* void */;
    }
    else {
        
    }


    /*  -------------interface--------------- */
/* interface `interfaceName^`$BRfun^{     */
/*     `cursor^                           */
/* }                                      */



interface interfaceName {
    
}

interface interfaceName_TYPED {
    
} b

    a interface interfaceName {
        
    } b

        a interface interfaceName {
            
        }


    /*  -------------switch---------------    */
/* switch (`$SParg^`var^`$SParg^)`$BRif^{ */
/*     `:case:^                           */
/* `                                      */
/*     `case...`                          */
/*     {{^                                */
/*     `:case:^                           */
/* `                                      */
/*     `case...`                          */
/* ^`}}^`                                 */
/*     `default...`{{^                    */
/*     `:default:^`}}^                    */
/* }                                      */



switch ( var ) {
    case constant :
        /* void */;
        break;

    case constant :
        /* void */;
        break;

    case constant :
        /* void */;
        break;

    case constant :
        /* void */;
        break;

    default:
        
}

switch ( var_TYPED ) {
    case constant_TYPED :
        job_TYPED
        break;

    case_TYPED
    
    default_TYPED
} b

a switch ( var ) {
    case constant :
        /* void */;
        break;

    case constant :
        /* void */;
        break;

    case constant :
        /* void */;
        break;

    case constant :
        /* void */;
        break;

    default:
        
} b

    a switch ( var ) {
        case constant :
            /* void */;
            break;
    
        case constant :
            /* void */;
            break;
    
        case constant :
            /* void */;
            break;
    
        case constant :
            /* void */;
            break;
    
        default:
            
    }


    /*  -------------while--------------- */
/* while (`condition^)`$BRloop^{      */
/*     `cursor^                       */
/* }                                  */



while (condition) {
    
}

while (condition_TYPED) {
    
} b

    a while (condition) {
        
    } b

        a while (condition) {
            
        }


    /*  -------------while0--------------- */
/* do`$BRloop^{                        */
/*     `cursor^                        */
/* }`$BRloop^while (`condition^);      */



do {
    
} while (false);

do {
    
} while (false); b

    a do {
        
    } while (false); b

        a do {
            
        } while (false);


    /*  -------------while1--------------- */
/* while (`condition^)`$BRloop^{       */
/*     `cursor^                        */
/* }                                   */



while (true) {
    
}

while (true) {
    
} b

    a while (true) {
        
    } b

        a while (true) {
            
        }


    /*  -------------whilenn--------------- */
/* while (`condition^)`$BRloop^{        */
/*     `cursor^                         */
/* }                                    */



while (null != var) {
    
}

while (null != var_TYPED) {
    
} b

    a while (null != var) {
        
    } b

        a while (null != var) {
            
        }


    /*  -------------{_--------------- */
/* {`wrapped^}                     */



{WRAPPED_TEXT
WRAPPED_TEXT_line2}

{WRAPPED_TEXT
WRAPPED_TEXT_line2}b

a {WRAPPED_TEXT
WRAPPED_TEXT_line2}b

a {WRAPPED_TEXT
WRAPPED_TEXT_line2}

