


    #  -------------"_--------------- 
    # "`wrapped^"                     



"WRAPPED_TEXT
WRAPPED_TEXT_line2"

"WRAPPED_TEXT
WRAPPED_TEXT_line2"b

a "WRAPPED_TEXT
WRAPPED_TEXT_line2"b

a "WRAPPED_TEXT
WRAPPED_TEXT_line2"


    #  -------------'_--------------- 
    # '`wrapped^'                     



'WRAPPED_TEXT
WRAPPED_TEXT_line2'

'WRAPPED_TEXT
WRAPPED_TEXT_line2'b

a 'WRAPPED_TEXT
WRAPPED_TEXT_line2'b

a 'WRAPPED_TEXT
WRAPPED_TEXT_line2'


    #  -------------(--------------- 
    # ( ~cursor^ )                   



    (  )

    (  ) b

    a (  ) b

    a (  )


    #  -------------(_--------------- 
    # (`wrapped^)                     



(WRAPPED_TEXT
WRAPPED_TEXT_line2)

(WRAPPED_TEXT
WRAPPED_TEXT_line2)b

a (WRAPPED_TEXT
WRAPPED_TEXT_line2)b

a (WRAPPED_TEXT
WRAPPED_TEXT_line2)


    #  -------------<_--------------- 
    # <`wrapped^>                     



<WRAPPED_TEXT
WRAPPED_TEXT_line2>

<WRAPPED_TEXT
WRAPPED_TEXT_line2>b

a <WRAPPED_TEXT
WRAPPED_TEXT_line2>b

a <WRAPPED_TEXT
WRAPPED_TEXT_line2>


    #  -------------[--------------- 
    # [ ~test^ ]                     



    [ test ]

    [ test_TYPED ] b

    a [ test ] b

    a [ test ]


    #  -------------[[--------------- 
    # [[ ~test^ ]]                    



    [[ test ]]

    [[ test_TYPED ]] b

    a [[ test ]] b

    a [[ test ]]


    #  -------------[_--------------- 
    # [`wrapped^]                     



[WRAPPED_TEXT
WRAPPED_TEXT_line2]

[WRAPPED_TEXT
WRAPPED_TEXT_line2]b

a [WRAPPED_TEXT
WRAPPED_TEXT_line2]b

a [WRAPPED_TEXT
WRAPPED_TEXT_line2]


    #  -------------`_--------------- 
    # \``wrapped^\`                   



`WRAPPED_TEXT
WRAPPED_TEXT_line2`

`WRAPPED_TEXT
WRAPPED_TEXT_line2`b

a `WRAPPED_TEXT
WRAPPED_TEXT_line2`b

a `WRAPPED_TEXT
WRAPPED_TEXT_line2`


    #  -------------Author--------------- 
    # `$author^                           



    drdr.xp

    drdr.xp b

    a drdr.xp b

    a drdr.xp


    #  -------------bash--------------- 
    # _CMT_!/bin/~sh^                   



    #!/bin/bash
    

    #!/bin/bash
     b

     a #!/bin/bash
      b

      a #!/bin/bash
      


    #  -------------case--------------- 
    # case $~var^ in                    
    #     ~pattern^)                    
    #     ~cursor^                      
    #     ;;                            
    #                                   
    #     *)                            
    #     ;;                            
    # esac                              



    case $var in
        pattern)
        
        ;;
    
        *)
        ;;
    esac

    case $var_TYPED in
        pattern_TYPED)
        
        ;;
    
        *)
        ;;
    esac b

    a case $var in
        pattern)
        
        ;;
    
        *)
        ;;
    esac b

    a case $var in
        pattern)
        
        ;;
    
        *)
        ;;
    esac


    #  -------------comment--------------- 
    # `$CS^ `cursor^                       



    # 
    #
    #  b
    #
    a #  b

    a # 


    #  -------------comment_--------------- 
    # `$CS^ `wrapped^                       



# WRAPPED_TEXT
WRAPPED_TEXT_line2

# WRAPPED_TEXT
WRAPPED_TEXT_line2b

a # WRAPPED_TEXT
WRAPPED_TEXT_line2b

a # WRAPPED_TEXT
WRAPPED_TEXT_line2


    #  -------------commentBlock--------------- 
    # `$CS^ `cursor^                            
    # `$CS^                                     



    # 
    #
    #
    # 
    # b
    #
    a # 
    # b
    #
    a # 
    #
    #

    #  -------------commentDoc--------------- 
    # `$CS^                                   
    # `$CS^ `cursor^                          
    # `$CS^                                   



    #
    # 
    #
    #
    #
    # 
    # b
    #
    a #
    # 
    # b
    #
    a #
    # 
    #
    #

    #  -------------commentLine--------------- 
    # `$CS^ `cursor^                           



    # 
    #
    #  b
    #
    a #  b

    a # 


    #  -------------commentLine_--------------- 
    # `$CS^ `wrapped^                           



# WRAPPED_TEXT
WRAPPED_TEXT_line2

# WRAPPED_TEXT
WRAPPED_TEXT_line2b

a # WRAPPED_TEXT
WRAPPED_TEXT_line2b

a # WRAPPED_TEXT
WRAPPED_TEXT_line2


    #  -------------echodate--------------- 
    # echo `date +~fmt^`                    



    echo `date +fmt`

    echo `date +fmt_TYPED` b

    a echo `date +fmt` b

    a echo `date +fmt`


    #  -------------el--------------- 
    # else                            
    #     ~cursor^                    



    else
        

        else
             b

             a else
                  b

                  a else
                      


    #  -------------elif---------------                           
    # elif ~condition^~condition^sh_complete_brace()^;~$BRif^then 
    #     ~cursor^                                                



elif condition; then
    

    elif condition_TYPED; then
         b

         a elif condition; then
              b

              a elif condition; then
                  


    #  -------------Email--------------- 
    # `$email^                           



    drdr.xp@gmail.com

    drdr.xp@gmail.com b

    a drdr.xp@gmail.com b

    a drdr.xp@gmail.com


    #  -------------File--------------- 
    # `file()^                          



    test.page

    test.page b

    a test.page b

    a test.page


    #  -------------for---------------                  
    # for ((~i^ = ~0^; ~i^ < ~len^; ~i^++));~$BRloop^do 
    #     ~cursor^                                      
    # done                                              



    for ((i = 0; i < len; i++)); do
        
    done

    for ((i_TYPED = 0_TYPED; i_TYPED < len_TYPED; i_TYPED++)); do
        
    done b

    a for ((i = 0; i < len; i++)); do
        
    done b

    a for ((i = 0; i < len; i++)); do
        
    done


    #  -------------foreach--------------- 
    # for ~i^ in ~list^;~$BRloop^do        
    #     ~cursor^                         
    # done                                 



    for i in list; do
        
    done

    for i_TYPED in list_TYPED; do
        
    done b

    a for i in list; do
        
    done b

    a for i in list; do
        
    done


    #  -------------forin--------------- 
    # for ~i^ in ~list^;~$BRloop^do      
    #     ~cursor^                       
    # done                               



    for i in list; do
        
    done

    for i_TYPED in list_TYPED; do
        
    done b

    a for i in list; do
        
    done b

    a for i in list; do
        
    done


    #  -------------forr---------------                      
    # for ((~i^ = ~n^; ~i^ >~=^ ~start^; ~i^--));~$BRloop^do 
    #     ~cursor^                                           
    # done                                                   



    for ((i = n; i >= start; i--)); do
        
    done

    for ((i_TYPED = n_TYPED; i_TYPED >_TYPED start_TYPED; i_TYPED--)); do
        
    done b

    a for ((i = n; i >= start; i--)); do
        
    done b

    a for ((i = n; i >= start; i--)); do
        
    done


    #  -------------fun--------------- 
    # ~name^ ()~$BRfun^{               
    #     ~cursor^                     
    # }                                



    name () {
        
    }

    name_TYPED () {
        
    } b

    a name () {
        
    } b

    a name () {
        
    }


    #  -------------if---------------                           
    # if ~condition^~condition^sh_complete_brace()^;~$BRif^then 
    #     ~cursor^                                              
    # fi                                                        



    if condition; then
        
    fi

    if condition_TYPED; then
        
    fi b

    a if condition; then
        
    fi b

    a if condition; then
        
    fi


    #  -------------ife---------------                          
    # if ~condition^~condition^sh_complete_brace()^;~$BRif^then 
    #     ~job^                                                 
    # else                                                      
    #     ~cursor^                                              
    # fi                                                        



    if condition; then
        job
    else
        
    fi

    if condition_TYPED; then
        job_TYPED
    else
        
    fi b

    a if condition; then
        job
    else
        
    fi b

    a if condition; then
        job
    else
        
    fi


    #  -------------sb--------------- 
    # _CMT_!/bin/~sh^                 



    #!/bin/sh
    

    #!/bin/sh
     b

     a #!/bin/sh
      b

      a #!/bin/sh
      


    #  -------------sh--------------- 
    # _CMT_!/bin/~sh^                 



    #!/bin/sh
    

    #!/bin/sh
     b

     a #!/bin/sh
      b

      a #!/bin/sh
      


    #  -------------shebang--------------- 
    # _CMT_!/bin/~sh^                      



    #!/bin/sh
    

    #!/bin/sh
     b

     a #!/bin/sh
      b

      a #!/bin/sh
      


    #  -------------while--------------- 
    # while ~condition^;~$BRloop^do      
    #     ~cursor^                       
    # done                               



    while condition; do
        
    done

    while condition_TYPED; do
        
    done b

    a while condition; do
        
    done b

    a while condition; do
        
    done


    #  -------------while1--------------- 
    # while ~condition^;~$BRloop^do       
    #     ~cursor^                        
    # done                                



    while [ 1 ]; do
        
    done

    while [ 1 ]; do
        
    done b

    a while [ 1 ]; do
        
    done b

    a while [ 1 ]; do
        
    done


    #  -------------zsh--------------- 
    # _CMT_!/bin/~sh^                  



    #!/bin/zsh
    

    #!/bin/zsh
     b

     a #!/bin/zsh
      b

      a #!/bin/zsh
      


    #  -------------{--------------- 
    # { ~cursor^ }                   



    {  }

    {  } b

        a {  } b

        a {  }


    #  -------------{_--------------- 
    # {`wrapped^}                     



{WRAPPED_TEXT
WRAPPED_TEXT_line2}

{WRAPPED_TEXT
WRAPPED_TEXT_line2}b

a {WRAPPED_TEXT
WRAPPED_TEXT_line2}b

a {WRAPPED_TEXT
WRAPPED_TEXT_line2}

